# Nested Global Config File
# Please setup the parameters carefully since if you provide incorrect information the nested service might not work
# properly or at all.
# Default values set in this config are for single-bundle nested. i.e. single-bundle nested means all the services
# required by nested are on single server instance.

#########################
##  Common Parameters ##
#######################
Domain: ronaksoftware.com
GoogleAPIKey:
ClientSideIP:
MongoDataDSN: mongodb://db-mongo.nst:27001
MongoFileDSN: mongodb://db-mongo.nst:27001
RedisCacheDSN: cache-redis.nst:6379
ExternalJobUrl: nats://job.arsaces.nst:4222
# CyrusFileSystemKey is required for nested services which need access to cyrus servers for file access.
# In case of multiple servers then this key MUST be same on all servers
CyrusFileSystemKey:


########################
## Services          ###
########################

#### Arsaces Service Config
# if EnabledServices.Arsaces is false then you can comment out this section safely.
# PortExposed: If it is true then Arsaces is accessible through outside network, otherwise it is only
# accessible in internal docker network
Arsaces:
  Port: 4222
  PortExposed: false

#### Cyrus Service Config
# if EnabledServices.Cyrus is false then you can comment out this section safely.
# BundleID: must be unique in the nested cluster, and for Cyrus service it must begin with: CYRUS
# Secure: if it is true then Cyrus implements TLS
Cyrus:
  BundleID: CYRUS-001
  Port: 81
  Secure: false
  DebugLevel: 0
  WebappBaseUrl: https://webapp.ronaksoftware.com
  SMTPUser:
  SMTPPass:
  SMTPPrivateKey:
  SMTPPublicKey:
  CyrusUrl:
  CertificateCheck: false

####  Mongo Service Config
# if EnabledServices.Mongo is false then you can comment out this section safely.
# PortExposed: If it is true then Arsaces is accessible through outside network, otherwise it is only
# accessible in internal docker network
Mongo:
  Port: 27001
  PortExposed: false

####  Redis Service Config
# if EnabledServices.Redis is false then you can comment out this section safely.
# PortExposed: If it is true then Arsaces is accessible through outside network, otherwise it is only
# accessible in internal docker network
Redis:
  Port: 6379
  PortExposed: false

####  Web Service Config (Web-app & Web-admin)
# if EnabledServices.Web is false then you can comment out this section safely.
# make sure to enter the complete urls which are visible to webapp
Web:
  AppPort: 80
  DisableFcm: false
  DefaultCyrusWebsocketUrl: ws://cyrus.nested.me:81
  DefaultCyrusHttpUrl: http://cyrus.nested.me:81
  DefaultXerxesUrl: http://xerxes.nested.me:83


# Services selects services which will be running on this server instance
EnabledServices:
  Arsaces: true
  Cyrus: true
  Gobryas: true
  Mongo: true
  Redis: true
  Web: true

